// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI chatbot tutor for practicing basic French conversations.
 *
 * - frenchChatbotTutor - A function that allows users to practice basic French conversations with an AI chatbot.
 * - FrenchChatbotTutorInput - The input type for the frenchChatbotTutor function.
 * - FrenchChatbotTutorOutput - The return type for the frenchChatbotTutor function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const FrenchChatbotTutorInputSchema = z.object({
  userInput: z.string().describe('The user input to the chatbot.'),
});
export type FrenchChatbotTutorInput = z.infer<typeof FrenchChatbotTutorInputSchema>;

const FrenchChatbotTutorOutputSchema = z.object({
  chatbotResponse: z.string().describe('The chatbot response to the user input.'),
});
export type FrenchChatbotTutorOutput = z.infer<typeof FrenchChatbotTutorOutputSchema>;

export async function frenchChatbotTutor(input: FrenchChatbotTutorInput): Promise<FrenchChatbotTutorOutput> {
  return frenchChatbotTutorFlow(input);
}

const prompt = ai.definePrompt({
  name: 'frenchChatbotTutorPrompt',
  input: {
    schema: z.object({
      userInput: z.string().describe('The user input to the chatbot.'),
    }),
  },
  output: {
    schema: z.object({
      chatbotResponse: z.string().describe('The chatbot response to the user input.'),
    }),
  },
  prompt: `You are a friendly and helpful AI chatbot tutor for practicing basic French conversations.

You should respond to the user in French, unless they ask a question about French grammar or vocabulary in English.
In that case, you should answer in English.

Your goal is to help the user improve their conversational skills and grammar.
Focus on beginner-friendly conversations, including basic greetings, common questions/answers, and vocabulary relevant to the lessons or stories.

User Input: {{{userInput}}}
`,
});

const frenchChatbotTutorFlow = ai.defineFlow<
  typeof FrenchChatbotTutorInputSchema,
  typeof FrenchChatbotTutorOutputSchema
>(
  {
    name: 'frenchChatbotTutorFlow',
    inputSchema: FrenchChatbotTutorInputSchema,
    outputSchema: FrenchChatbotTutorOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
