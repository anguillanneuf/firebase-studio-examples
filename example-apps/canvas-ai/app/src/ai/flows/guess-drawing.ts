// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that guesses what the user has drawn on the canvas.
 *
 * - guessDrawing - A function that handles the drawing guess process.
 * - GuessDrawingInput - The input type for the guessDrawing function.
 * - GuessDrawingOutput - The return type for the guessDrawing function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GuessDrawingInputSchema = z.object({
  imageBase64: z.string().describe('The base64 encoded image of the drawing.'),
});
export type GuessDrawingInput = z.infer<typeof GuessDrawingInputSchema>;

const GuessDrawingOutputSchema = z.object({
  guess: z.string().describe('The AI guess of what the drawing represents.'),
});
export type GuessDrawingOutput = z.infer<typeof GuessDrawingOutputSchema>;

export async function guessDrawing(input: GuessDrawingInput): Promise<GuessDrawingOutput> {
  return guessDrawingFlow(input);
}

const prompt = ai.definePrompt({
  name: 'guessDrawingPrompt',
  input: {
    schema: z.object({
      imageBase64: z.string().describe('The base64 encoded image of the drawing.'),
    }),
  },
  output: {
    schema: z.object({
      guess: z.string().describe('The AI guess of what the drawing represents.'),
    }),
  },
  prompt: `You are an AI that specializes in guessing what a user has drawn on a canvas.

  Analyze the image and provide a concise guess of what the drawing represents.

  Here is the drawing:
  {{media url=imageBase64}}`,
});

const guessDrawingFlow = ai.defineFlow<
  typeof GuessDrawingInputSchema,
  typeof GuessDrawingOutputSchema
>({
  name: 'guessDrawingFlow',
  inputSchema: GuessDrawingInputSchema,
  outputSchema: GuessDrawingOutputSchema,
}, async input => {
  const {output} = await prompt(input);
  return output!;
});
